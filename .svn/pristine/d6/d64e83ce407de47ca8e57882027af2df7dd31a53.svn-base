/*
 * Created on Jan 14, 2014
 *
 * To change the template for this generated file go to
 * Window&gt;Preferences&gt;Java&gt;Code Generation&gt;Code and Comments
 */
package com.cisco.pims.Core;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class PIMSLogging {
	//Configuration Variables
	int errMsgId;
	String errMsgType;
	int SuccessMsgId;
	String successMsgType;
	int trackingMsgId;
	String trackingMsgType;
	int warningMsgId;
	String warningMsgType;
	String priorityCritical;
	String priorityHigh;
	String priorityMedium;
	String priorityLow;
	
	String iEMMSuccess;
	String iEMMFailure;
	int sequence;
	//Getters and Setters Methods for Configuration Variables


	public int getErrMsgId() {
		return errMsgId;
	}

	public void setErrMsgId(int errMsgId) {
		this.errMsgId = errMsgId;
	}

	public String getErrMsgType() {
		return errMsgType;
	}

	public void setErrMsgType(String errMsgType) {
		this.errMsgType = errMsgType;
	}

		public int getSuccessMsgId() {
		return SuccessMsgId;
	}

	public void setSuccessMsgId(int successMsgId) {
		SuccessMsgId = successMsgId;
	}

	public String getSuccessMsgType() {
		return successMsgType;
	}

	public void setSuccessMsgType(String successMsgType) {
		this.successMsgType = successMsgType;
	}

	public int getTrackingMsgId() {
		return trackingMsgId;
	}

	public void setTrackingMsgId(int trackingMsgId) {
		this.trackingMsgId = trackingMsgId;
	}

	public String getTrackingMsgType() {
		return trackingMsgType;
	}

	public void setTrackingMsgType(String trackingMsgType) {
		this.trackingMsgType = trackingMsgType;
	}

	public int getWarningMsgId() {
		return warningMsgId;
	}

	public void setWarningMsgId(int warningMsgId) {
		this.warningMsgId = warningMsgId;
	}
	
	public String getWarningMsgType() {
		return warningMsgType;
	}

	public void setWarningMsgType(String warningMsgType) {
		this.warningMsgType = warningMsgType;
	}

	public String getPriorityCritical() {
		return priorityCritical;
	}

	public void setPriorityCritical(String priorityCritical) {
		this.priorityCritical = priorityCritical;
	}

	public String getPriorityHigh() {
		return priorityHigh;
	}

	public void setPriorityHigh(String priorityHigh) {
		this.priorityHigh = priorityHigh;
	}

	public String getPriorityMedium() {
		return priorityMedium;
	}

	public void setPriorityMedium(String priorityMedium) {
		this.priorityMedium = priorityMedium;
	}

	public String getPriorityLow() {
		return priorityLow;
	}

	public void setPriorityLow(String priorityLow) {
		this.priorityLow = priorityLow;
	}

	public String getiEMMSuccess() {
		return iEMMSuccess;
	}

	public void setiEMMSuccess(String iEMMSuccess) {
		this.iEMMSuccess = iEMMSuccess;
	}

	public String getiEMMFailure() {
		return iEMMFailure;
	}

	public void setiEMMFailure(String iEMMFailure) {
		this.iEMMFailure = iEMMFailure;
	}
	
	public int getSequence() {
		return sequence;
	}

	public void setSequence(int sequence) {
		this.sequence = sequence;
	}

	//Initialize all Configuration Variables from Database
	public PIMSLogging(Connection con, String environment){
		PreparedStatement pstmt = null;
		ResultSet rSet = null;
		try {
				pstmt = DBConnectionFactory.prepareStatement(con,
						PIMSConstants.INITGLOBAL);
				rSet = pstmt.executeQuery();
				while (rSet.next()) {
					if (rSet.getString(2).equals(PIMSConstants.configErrMsgId)) {
						this.setErrMsgId(Integer.parseInt(rSet.getString(3)));
					} else if (rSet.getString(2).equals(PIMSConstants.configErrMsg)) {
						this.setErrMsgType(rSet.getString(3));
					} else if (rSet.getString(2).equals(PIMSConstants.configSuccessMsgId)) {
						this.setSuccessMsgId(Integer.parseInt(rSet.getString(3)));
					} else if (rSet.getString(2).equals(PIMSConstants.configSuccessMsg)) {
						this.setSuccessMsgType(rSet.getString(3));
					} else if (rSet.getString(2).equals(PIMSConstants.configTrackingMsgId)) {
						this.setTrackingMsgId(Integer.parseInt(rSet.getString(3)));
					} else if (rSet.getString(2).equals(PIMSConstants.configTrackingMsg)) {
						this.setTrackingMsgType(rSet.getString(3));
					} else if (rSet.getString(2).equals(PIMSConstants.configWarningMsgId)) {
						this.setWarningMsgId(Integer.parseInt(rSet.getString(3)));
					} else if (rSet.getString(2).equals(PIMSConstants.configWarningMsg)) {
						this.setWarningMsgType(rSet.getString(3));
					} else if (rSet.getString(2).equals(PIMSConstants.configPriorityC)) {
						this.setPriorityCritical(rSet.getString(3));
					} else if (rSet.getString(2).equals(PIMSConstants.configPriorityH)) {
						this.setPriorityHigh(rSet.getString(3));
					} else if (rSet.getString(2).equals(PIMSConstants.configPriorityM)) {
						this.setPriorityMedium(rSet.getString(3));
					} else if (rSet.getString(2).equals(PIMSConstants.configPriorityL)) {
						this.setPriorityLow(rSet.getString(3));
					} else if (rSet.getString(2).equals(PIMSConstants.configEmmSuccess) && environment.equals(PIMSConstants.envTest) && rSet.getInt(1) == PIMSConstants.testSeq) {
						this.setiEMMSuccess(rSet.getString(3));
						this.setSequence(PIMSConstants.testSeq);
					} else if (rSet.getString(2).equals(PIMSConstants.configEmmSuccess) && environment.equals(PIMSConstants.envProd) && rSet.getInt(1) == PIMSConstants.prodSeq) {
						this.setiEMMSuccess(rSet.getString(3));
						this.setSequence(PIMSConstants.prodSeq);
					} else if (rSet.getString(2).equals(PIMSConstants.configEmmFailure) && environment.equals(PIMSConstants.envTest) && rSet.getInt(1) == PIMSConstants.testSeq) {
						this.setiEMMFailure(rSet.getString(3));
						this.setSequence(PIMSConstants.testSeq);
					} else if (rSet.getString(2).equals(PIMSConstants.configEmmFailure) && environment.equals(PIMSConstants.envProd) && rSet.getInt(1) == PIMSConstants.prodSeq) {
						this.setiEMMFailure(rSet.getString(3));
						this.setSequence(PIMSConstants.prodSeq);
					}
				}
			} catch (NumberFormatException e) {
				e.printStackTrace();
			} catch (SQLException e) {
				e.printStackTrace();
			} finally {
				DBConnectionFactory.close(pstmt, rSet);
			}
	}
	
	}
